version: '3.3'

# test

services:
  # for protonvpn
  proton:
    image: qmcgaw/gluetun
    container_name: proton
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    ports:
      - 6881:6881
      - 6881:6881/udp
      - 8085:8085 # qbittorrent
      - 9696:9696 # prowlarr
      - 8191:8191 # flaresolverr
      - 8989:8989 # sonarr
      - 7878:7878 # radarr
      - 8787:8787 # readarr
      - 8686:8686 # lidarr
      - 6767:6767 # bazarr
      - 5299:5299 # lazylibrarian
    volumes:
      - ${DOCKER_BASE}/proton:/gluetun
    env_file:
      - .env.secret
    environment:
      - VPN_SERVICE_PROVIDER=custom
      - VPN_TYPE=wireguard
      # Wireguard:
#      - VPN_ENDPOINT_IP=/run/secrets/wg_endpoint
      - VPN_ENDPOINT_PORT=51820
#      - WIREGUARD_CONF_SECRETFILE=/run/secrets/wg0.conf
#      - WIREGUARD_PUBLIC_KEY=/run/secrets/wg_public_key
#      - WIREGUARD_PRESHARED_KEY=
#      - WIREGUARD_PRIVATE_KEY=/run/secrets/wg_private_key
      - WIREGUARD_ADDRESSES=10.2.0.2/32
      - TZ=Etc/UTC
      # Server list updater
      # See https://github.com/qdm12/gluetun-wiki/blob/main/setup/servers.md#update-the-vpn-servers-list
      - UPDATER_PERIOD=24h

  # for downloading torrents
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8085
      - TORRENTING_PORT=6881
    volumes:
      - ${DOCKER_BASE}/qbittorrent/config:/config
      - ${DOWNLOADS}:/downloads
    restart: unless-stopped
    depends_on: 
      - proton
    network_mode: "service:proton"

  # for media browsing
  jellyfin:
    image: lscr.io/linuxserver/jellyfin:latest
    container_name: jellyfin
    user: root
    ports: 
      - '8096:8096'
    volumes:
      - ${DOCKER_BASE}/jellyfin/config:/config
      - ${TV}:/data/tvshows
      - ${MOVIE}:/data/movies
    restart: 'unless-stopped'

  # for listening to audio books
  audiobookshelf:
    image: ghcr.io/advplyr/audiobookshelf:latest
    ports:
      - 13378:80
    volumes:
      - ${BOOKS}:/audiobooks
      - ${POD}:/podcasts
      # The metadata directory can be stored anywhere on your computer
      - ${DOCKER_BASE}/audiobookshelf/metadata:/metadata
      # The config directory needs to be on the same physical machine
      # you are running ABS on
      - ${DOCKER_BASE}/audiobookshelf/config:/config
    restart: unless-stopped

  # for media requests
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    environment:
        - LOG_LEVEL=debug
        - TZ=${TZ}
    ports:
        - 5055:5055
    volumes:
        - ${DOCKER_BASE}/jellyseer/config:/app/config
    restart: unless-stopped

  # for index management
  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_BASE}/prowlarr/data:/config
    restart: unless-stopped
    depends_on: 
      - proton
    network_mode: "service:proton"

  # indexer proxy
  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=${TZ}
    depends_on: 
      - proton
    network_mode: "service:proton"
    restart: unless-stopped

  # for tv
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_BASE}/sonarr/config:/config
      - ${TV}:/tv #optional
      - ${DOWNLOADS}:/downloads #optional
    restart: unless-stopped
    depends_on: 
      - proton
    network_mode: "service:proton"

  # for movies
  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_BASE}/radarr/config:/config
      - ${MOVIE}:/movies #optional
      - ${DOWNLOADS}:/downloads #optional
    restart: unless-stopped
    depends_on: 
      - proton
    network_mode: "service:proton"

  # for books
  readarr:
    image: lscr.io/linuxserver/readarr:develop
    container_name: readarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_BASE}/readarr/config:/config
      - ${BOOKS}:/books #optional
      - ${DOWNLOADS}:/downloads #optional
    restart: unless-stopped
    depends_on: 
      - proton
    network_mode: "service:proton"
  
  # for music
  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_BASE}/lidarr/config:/config
      - ${MUSIC}:/music #optional
      - ${DOWNLOADS}:/downloads #optional
    restart: unless-stopped
    depends_on: 
      - proton
    network_mode: "service:proton"

  # for subtitles
  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_BASE}/bazarr/config:/config
      - ${MOVIE}:/movies #optional
      - ${TV}:/tv #optional
    restart: unless-stopped
    depends_on: 
      - proton
    network_mode: "service:proton"

  # for book metadata
  lazylibrarian:
    image: lscr.io/linuxserver/lazylibrarian:latest
    container_name: lazylibrarian
    environment:
      - PUID=${PUID}
      - PGID=${PUID}
      - TZ=${TZ}
      - DOCKER_MODS=linuxserver/mods:universal-calibre|linuxserver/mods:lazylibrarian-ffmpeg #optional
    volumes:
      - ${DOCKER_BASE}/lazylibrarian/config:/config
      - ${DOWNLOADS}:/downloads
      - ${BOOKS}:/books #optional
    restart: unless-stopped
    depends_on: 
      - proton
    network_mode: "service:proton"

  # for rss feeds
  freshrss:
    image: lscr.io/linuxserver/freshrss:latest
    container_name: freshrss
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${DOCKER_BASE}/freshrss/config:/config
    ports:
      - 8080:80
    restart: unless-stopped
    
networks:
  default:
    external: true
    name: nginx-network
